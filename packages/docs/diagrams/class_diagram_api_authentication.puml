@startuml
class Transaction {
    +transactionAddress: string
    +walletIn: string
    +walletOut: string
    +amount: string
    +createdAt: Date
}
enum CurrencyType {
    ETHEREUM
    BITCOIN
}
class Wallet {
    +address: string
    +userId: number
    +name: string
    +user: User
    +currencyType: CurrencyType
    +transactions: Transaction[]
}
class User {
    +id: number
    +firstName: string
    +lastName: string
    +email: string
    +password: string
    +createdAt: Date
    +wallets: Wallet[]
}
interface SignUpRequest extends InferType
class UsersService {
    -userRepository: Repository<User>
    +create(signUpReq: SignUpRequest): Promise<User>
    +findOne(email: string): Promise<User>
    +findOneById(id: number): Promise<User>
}
interface SignInRequest extends InferType
class AuthenticationService {
    -jwtService: JwtService
    -usersService: UsersService
    +signUp(signUpReq: SignUpRequest): Promise<JwtToken>
    +signIn(signInReq: SignInRequest): Promise<JwtToken>
    -signToken(user: User): JwtToken
}
class AuthenticationController {
    -authService: AuthenticationService
    +signUp(body: SignUpRequest): Promise<JwtToken>
    +signIn(body: SignInRequest): Promise<JwtToken>
}
Wallet --> "1" User
Wallet --> "1" CurrencyType
Wallet --> "*" Transaction
User --> "*" Wallet
UsersService --> "1" User
UsersService --> "1" SignUpRequest
AuthenticationService --> "1" UsersService
AuthenticationService --> "1" SignUpRequest
AuthenticationService --> "1" SignInRequest
AuthenticationService --> "1" User
AuthenticationController --> "1" AuthenticationService
AuthenticationController --> "1" SignUpRequest
AuthenticationController --> "1" SignInRequest
@enduml