@startuml
enum CurrencyType {
    ETHEREUM
    BITCOIN
}
interface CreateWalletRequest extends InferType
class JwtAuthGuard
interface DeleteWalletRequest extends InferType
class ContactAddress {
    +walletAddress: string
    +contacts?: Contact[]
}
class Contact {
    +contactName: string
    +userId: number
    +user?: User
    +addresses: ContactAddress[]
}
class ContactBuilder {
    -contactName: string
    -userId: number
    -addresses: string[]
    +setContactName(name: string): this
    +setUserId(userId: number): this
    +setAddresses(addresses: string[]): this
    +build(): Contact
}
class Transaction {
    +id: number
    +transactionAddress: string
    +walletIn: string
    +contactIn: Contact
    +walletOut: string
    +contactOut: Contact
    +amount: string
    +gasPrice: string
    +gasLimit: string
    +createdAt: Date
    +tags: Tag[]
}
class Tag {
    +tagName: string
    +userId: number
    +user: User
    +transactions: Transaction[]
}
enum Role {
    BASIC
    PRO
}
class User {
    +id: number
    +firstName: string
    +lastName: string
    +email: string
    +password: string
    +areNotificationsEnabled: boolean
    +role: Role
    +createdAt: Date
    +wallets: Wallet[]
    +tags: Tag[]
    +contacts: Contact[]
}
class Wallet {
    +address: string
    +userId: number
    +name: string
    +user: User
    +currencyType: CurrencyType
    +transactions: Transaction[]
}
interface WalletWithBalance extends Wallet {
    +balance: string
}
interface GetWalletsRequest extends InferType
abstract class AbstractGateway {
    -uri: string
    -fetch: any
    #request(method: Method, headers: Headers, path: string, body: any): Promise<T>
    #{abstract} handleError(response: any): Promise<void>
}
enum Method {
    POST
    GET
    PUT
    PATCH
    DELETE
}
class HttpError extends Error {
    +message: string
    +status: number
}
abstract class AbstractServiceGateway extends AbstractGateway {
    #handleError(response: any): Promise<void>
}
interface GetTransactionsRequest extends InferType
abstract class AbstractEdgeGatewayStrategy extends AbstractServiceGateway {
    +{abstract} createWallet(req: CreateWalletRequest): Promise<WalletWithBalance>
    +{abstract} deleteWallet(req: DeleteWalletRequest): Promise<WalletWithBalance>
    +{abstract} getWallets(req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +{abstract} getTransactions(req: GetTransactionsRequest): Promise<Transaction[]>
}
class EthEdgeGatewayStrategy extends AbstractEdgeGatewayStrategy {
    -configService: ConfigService<Record<string, unknown>, false>
    +createWallet(req: CreateWalletRequest): Promise<WalletWithBalance>
    +getWallets(req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +getTransactions(req: GetTransactionsRequest): Promise<Transaction[]>
    +deleteWallet(req: DeleteWalletRequest): Promise<WalletWithBalance>
}
class BtcEdgeGatewayStrategy extends AbstractEdgeGatewayStrategy {
    -configService: ConfigService<Record<string, unknown>, false>
    +createWallet(req: CreateWalletRequest): Promise<WalletWithBalance>
    +getWallets(req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +getTransactions(req: GetTransactionsRequest): Promise<Transaction[]>
    +deleteWallet(req: DeleteWalletRequest): Promise<WalletWithBalance>
}
class EdgeGatewayStrategyFactory {
    -ethEdgeGatewayStrategy: EthEdgeGatewayStrategy
    -btcEdgeGatewayStrategy: BtcEdgeGatewayStrategy
    +get(currencyType: CurrencyType): AbstractEdgeGatewayStrategy
}
class WalletsService {
    -edgeGatewayStrategyFactory: EdgeGatewayStrategyFactory
    +create(req: CreateWalletRequest): Promise<WalletWithBalance>
    +delete(req: DeleteWalletRequest): Promise<WalletWithBalance>
    +findAll(req: GetWalletsRequest): Promise<WalletWithBalance[]>
}
class CanMutateResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
class CanAccessResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
class WalletsController {
    -walletsService: WalletsService
    +create(body: CreateWalletRequest): Promise<WalletWithBalance>
    +findAll(params: GetWalletsRequest): Promise<WalletWithBalance[]>
    +delete(params: DeleteWalletRequest): Promise<WalletWithBalance>
}
ContactAddress --> "*" Contact
Contact --> "1" User
Contact --> "*" ContactAddress
ContactBuilder --> "1" Contact
Transaction --> "1" Contact
Transaction --> "*" Tag
Tag --> "1" User
Tag --> "*" Transaction
User --> "1" Role
User --> "*" Wallet
User --> "*" Tag
User --> "*" Contact
Wallet --> "1" User
Wallet --> "1" CurrencyType
Wallet --> "*" Transaction
AbstractGateway --> "1" Method
AbstractEdgeGatewayStrategy --> "1" CreateWalletRequest
AbstractEdgeGatewayStrategy --> "1" WalletWithBalance
AbstractEdgeGatewayStrategy --> "1" DeleteWalletRequest
AbstractEdgeGatewayStrategy --> "1" GetWalletsRequest
AbstractEdgeGatewayStrategy --> "*" WalletWithBalance
AbstractEdgeGatewayStrategy --> "1" GetTransactionsRequest
AbstractEdgeGatewayStrategy --> "*" Transaction
EthEdgeGatewayStrategy --> "1" CreateWalletRequest
EthEdgeGatewayStrategy --> "1" WalletWithBalance
EthEdgeGatewayStrategy --> "1" GetWalletsRequest
EthEdgeGatewayStrategy --> "*" WalletWithBalance
EthEdgeGatewayStrategy --> "1" GetTransactionsRequest
EthEdgeGatewayStrategy --> "*" Transaction
EthEdgeGatewayStrategy --> "1" DeleteWalletRequest
BtcEdgeGatewayStrategy --> "1" CreateWalletRequest
BtcEdgeGatewayStrategy --> "1" WalletWithBalance
BtcEdgeGatewayStrategy --> "1" GetWalletsRequest
BtcEdgeGatewayStrategy --> "*" WalletWithBalance
BtcEdgeGatewayStrategy --> "1" GetTransactionsRequest
BtcEdgeGatewayStrategy --> "*" Transaction
BtcEdgeGatewayStrategy --> "1" DeleteWalletRequest
EdgeGatewayStrategyFactory --> "1" EthEdgeGatewayStrategy
EdgeGatewayStrategyFactory --> "1" BtcEdgeGatewayStrategy
EdgeGatewayStrategyFactory --> "1" CurrencyType
EdgeGatewayStrategyFactory --> "1" AbstractEdgeGatewayStrategy
WalletsService --> "1" EdgeGatewayStrategyFactory
WalletsService --> "1" CreateWalletRequest
WalletsService --> "1" WalletWithBalance
WalletsService --> "1" DeleteWalletRequest
WalletsService --> "1" GetWalletsRequest
WalletsService --> "*" WalletWithBalance
WalletsController --> "1" WalletsService
WalletsController --> "1" CreateWalletRequest
WalletsController --> "1" WalletWithBalance
WalletsController --> "1" GetWalletsRequest
WalletsController --> "*" WalletWithBalance
WalletsController --> "1" DeleteWalletRequest
@enduml