@startuml
class JwtAuthGuard
class CanAccessResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
interface GetTagsRequest extends InferType
interface CreateTagRequest extends InferType
interface UpdateTagRequest extends InferType
interface DeleteTagRequest extends InferType
enum CurrencyType {
    ETHEREUM
    BITCOIN
}
class Wallet {
    +address: string
    +userId: number
    +name: string
    +user: User
    +currencyType: CurrencyType
    +transactions: Transaction[]
}
enum Role {
    BASIC
    PRO
}
class User {
    +id: number
    +firstName: string
    +lastName: string
    +email: string
    +password: string
    +areNotificationsEnabled: boolean
    +role: Role
    +createdAt: Date
    +wallets: Wallet[]
    +tags: Tag[]
    +contacts: Contact[]
}
class ContactAddress {
    +walletAddress: string
    +contacts?: Contact[]
}
class Contact {
    +contactName: string
    +userId: number
    +user?: User
    +addresses: ContactAddress[]
}
class ContactBuilder {
    -contactName: string
    -userId: number
    -addresses: string[]
    +setContactName(name: string): this
    +setUserId(userId: number): this
    +setAddresses(addresses: string[]): this
    +build(): Contact
}
class Transaction {
    +id: number
    +transactionAddress: string
    +walletIn: string
    +contactIn: Contact
    +walletOut: string
    +contactOut: Contact
    +amount: string
    +gasPrice: string
    +gasLimit: string
    +createdAt: Date
    +tags: Tag[]
}
class Tag {
    +tagName: string
    +userId: number
    +user: User
    +transactions: Transaction[]
}
class TagsService {
    -tagRepository: Repository<Tag>
    -transactionRepository: Repository<Transaction>
    +findAll(userId: number): Promise<Tag[]>
    +create(req: CreateTagRequest): Promise<Tag>
    +update(updateTagNameRequest: UpdateTagRequest): Promise<Tag>
    +delete(deleteTagRequest: DeleteTagRequest): Promise<Tag>
}
class CanMutateResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
class TagsController {
    -tagsService: TagsService
    +get(params: GetTagsRequest): Promise<Tag[]>
    +create(body: CreateTagRequest): Promise<Tag>
    +update(body: UpdateTagRequest): Promise<Tag>
    +delete(params: DeleteTagRequest): Promise<Tag>
}
Wallet --> "1" User
Wallet --> "1" CurrencyType
Wallet --> "*" Transaction
User --> "1" Role
User --> "*" Wallet
User --> "*" Tag
User --> "*" Contact
ContactAddress --> "*" Contact
Contact --> "1" User
Contact --> "*" ContactAddress
ContactBuilder --> "1" Contact
Transaction --> "1" Contact
Transaction --> "*" Tag
Tag --> "1" User
Tag --> "*" Transaction
TagsService --> "1" Tag
TagsService --> "1" Transaction
TagsService --> "*" Tag
TagsService --> "1" CreateTagRequest
TagsService --> "1" UpdateTagRequest
TagsService --> "1" DeleteTagRequest
TagsController --> "1" TagsService
TagsController --> "1" GetTagsRequest
TagsController --> "*" Tag
TagsController --> "1" CreateTagRequest
TagsController --> "1" Tag
TagsController --> "1" UpdateTagRequest
TagsController --> "1" DeleteTagRequest
@enduml