@startuml
class JwtAuthGuard
class TransactionTag {
    +tagName: string
    +userId: number
    +user: User
    +transactions: Transaction[]
}
class Transaction {
    +id: number
    +transactionAddress: string
    +walletIn: string
    +walletOut: string
    +amount: string
    +createdAt: Date
    +tags: TransactionTag[]
}
enum CurrencyType {
    ETHEREUM
    BITCOIN
}
class Wallet {
    +address: string
    +userId: number
    +name: string
    +user: User
    +currencyType: CurrencyType
    +transactions: Transaction[]
}
class User {
    +id: number
    +firstName: string
    +lastName: string
    +email: string
    +password: string
    +areNotificationsEnabled: boolean
    +createdAt: Date
    +wallets: Wallet[]
    +tags: TransactionTag[]
}
interface SignUpRequest extends InferType
interface UpdateUserRequest {
    +userId: number
    +firstName?: string
    +lastName?: string
    +email?: string
    +password?: string
    +areNotificationsEnabled?: boolean
}
class UsersService {
    -userRepository: Repository<User>
    +create(signUpReq: SignUpRequest): Promise<User>
    +findOne(email: string): Promise<User>
    +findOneById(id: number): Promise<User>
    +update(updateUserRequest: UpdateUserRequest): Promise<User>
}
class CanMutateResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
class UsersController {
    -usersService: UsersService
    +whoami(req: any): Promise<User>
    +update(body: UpdateUserRequest): Promise<User>
}
TransactionTag --> "1" User
TransactionTag --> "*" Transaction
Transaction --> "*" TransactionTag
Wallet --> "1" User
Wallet --> "1" CurrencyType
Wallet --> "*" Transaction
User --> "*" Wallet
User --> "*" TransactionTag
UsersService --> "1" User
UsersService --> "1" SignUpRequest
UsersService --> "1" UpdateUserRequest
UsersController --> "1" UsersService
UsersController --> "1" User
UsersController --> "1" UpdateUserRequest
@enduml