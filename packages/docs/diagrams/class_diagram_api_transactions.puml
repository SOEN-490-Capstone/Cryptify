@startuml
class JwtAuthGuard
interface GetTransactionsRequest extends InferType
class CanAccessResourceGuard implements CanActivate {
    +canActivate(context: ExecutionContext): boolean | Promise<boolean> | Observable<boolean>
}
enum CurrencyType {
    ETHEREUM
    BITCOIN
}
abstract class AbstractGateway {
    -uri: string
    -fetch: any
    #request(method: Method, headers: Headers, path: string, body: any): Promise<T>
    #{abstract} handleError(response: any): Promise<void>
}
enum Method {
    POST
    GET
    PUT
    PATCH
    DELETE
}
class HttpError extends Error {
    +message: string
    +status: number
}
abstract class AbstractServiceGateway extends AbstractGateway {
    #handleError(response: any): Promise<void>
}
interface CreateWalletRequest extends InferType
class User {
    +id: number
    +firstName: string
    +lastName: string
    +email: string
    +password: string
    +createdAt: Date
    +wallets: Wallet[]
}
class Transaction {
    +transactionAddress: string
    +walletIn: string
    +walletOut: string
    +amount: string
    +createdAt: Date
}
class Wallet {
    +address: string
    +userId: number
    +name: string
    +user: User
    +currencyType: CurrencyType
    +transactions: Transaction[]
}
interface WalletWithBalance extends Wallet {
    +balance: string
}
interface GetWalletsRequest extends InferType
abstract class AbstractEdgeGatewayStrategy extends AbstractServiceGateway {
    +{abstract} createWallet(req: CreateWalletRequest): Promise<WalletWithBalance>
    +{abstract} getWallets(req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +{abstract} getTransactions(req: GetTransactionsRequest): Promise<Transaction[]>
}
class EthEdgeGatewayStrategy extends AbstractEdgeGatewayStrategy {
    -configService: ConfigService<Record<string, unknown>, false>
    +createWallet(req: CreateWalletRequest): Promise<WalletWithBalance>
    +getWallets(req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +getTransactions(req: GetTransactionsRequest): Promise<Transaction[]>
}
class BtcEdgeGatewayStrategy extends AbstractEdgeGatewayStrategy {
    -configService: ConfigService<Record<string, unknown>, false>
    +createWallet(_req: CreateWalletRequest): Promise<WalletWithBalance>
    +getWallets(_req: GetWalletsRequest): Promise<WalletWithBalance[]>
    +getTransactions(_req: GetTransactionsRequest): Promise<Transaction[]>
}
class EdgeGatewayStrategyFactory {
    -ethEdgeGatewayStrategy: EthEdgeGatewayStrategy
    -btcEdgeGatewayStrategy: BtcEdgeGatewayStrategy
    +get(currencyType: CurrencyType): AbstractEdgeGatewayStrategy
}
class TransactionsService {
    -edgeGatewayStrategyFactory: EdgeGatewayStrategyFactory
    +findAll(req: GetTransactionsRequest): Promise<Transaction[]>
}
class TransactionsController {
    -transactionsService: TransactionsService
    +findAll(params: GetTransactionsRequest): Promise<Transaction[]>
}
AbstractGateway --> "1" Method
User --> "*" Wallet
Wallet --> "1" User
Wallet --> "1" CurrencyType
Wallet --> "*" Transaction
AbstractEdgeGatewayStrategy --> "1" CreateWalletRequest
AbstractEdgeGatewayStrategy --> "1" WalletWithBalance
AbstractEdgeGatewayStrategy --> "1" GetWalletsRequest
AbstractEdgeGatewayStrategy --> "*" WalletWithBalance
AbstractEdgeGatewayStrategy --> "1" GetTransactionsRequest
AbstractEdgeGatewayStrategy --> "*" Transaction
EthEdgeGatewayStrategy --> "1" CreateWalletRequest
EthEdgeGatewayStrategy --> "1" WalletWithBalance
EthEdgeGatewayStrategy --> "1" GetWalletsRequest
EthEdgeGatewayStrategy --> "*" WalletWithBalance
EthEdgeGatewayStrategy --> "1" GetTransactionsRequest
EthEdgeGatewayStrategy --> "*" Transaction
BtcEdgeGatewayStrategy --> "1" CreateWalletRequest
BtcEdgeGatewayStrategy --> "1" WalletWithBalance
BtcEdgeGatewayStrategy --> "1" GetWalletsRequest
BtcEdgeGatewayStrategy --> "*" WalletWithBalance
BtcEdgeGatewayStrategy --> "1" GetTransactionsRequest
BtcEdgeGatewayStrategy --> "*" Transaction
EdgeGatewayStrategyFactory --> "1" EthEdgeGatewayStrategy
EdgeGatewayStrategyFactory --> "1" BtcEdgeGatewayStrategy
EdgeGatewayStrategyFactory --> "1" CurrencyType
EdgeGatewayStrategyFactory --> "1" AbstractEdgeGatewayStrategy
TransactionsService --> "1" EdgeGatewayStrategyFactory
TransactionsService --> "1" GetTransactionsRequest
TransactionsService --> "*" Transaction
TransactionsController --> "1" TransactionsService
TransactionsController --> "1" GetTransactionsRequest
TransactionsController --> "*" Transaction
@enduml